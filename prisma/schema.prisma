generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int        @id @default(autoincrement())
  name       String
  email      String     @unique
  password   String
  role       String     @default("customer") // e.g., 'admin', 'customer'
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  purchases  Purchase[]
}

model Sweet {
  id         Int        @id @default(autoincrement())
  name       String
  category   String
  price      Decimal    @db.Decimal(10, 2)
  quantity   Int
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  purchases  Purchase[]
  restocks   Restock[]

  @@unique([name, category])
  @@index([category])
}

model Purchase {
  id          Int       @id @default(autoincrement())
  sweet       Sweet     @relation(fields: [sweetId], references: [id], onDelete: Cascade)
  sweetId     Int
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  quantity    Int
  priceEach   Decimal   @db.Decimal(10, 2)
  totalPrice  Decimal   @db.Decimal(10, 2)
  purchasedAt DateTime  @default(now())

  @@index([userId])
  @@index([sweetId])
}

model Restock {
  id          Int       @id @default(autoincrement())
  sweet       Sweet     @relation(fields: [sweetId], references: [id], onDelete: Cascade)
  sweetId     Int
  quantity    Int
  restockedAt DateTime  @default(now())

  @@index([sweetId])
}