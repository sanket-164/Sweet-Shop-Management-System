generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int        @id @default(autoincrement())
  name       String
  email      String     @unique
  password   String
  role       String     @default("customer") // e.g., 'admin', 'customer'
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  orders      Order[]

  @@index([email])
}

model Sweet {
  id         Int        @id @default(autoincrement())
  name       String
  category   String
  price      Int
  quantity   Int
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  orderItems OrderItem[]
  restocks   Restock[]

  @@index([category])
}

model Order {
  id          Int       @id @default(autoincrement())
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  totalPrice  Int
  purchasedAt DateTime  @default(now())

  orderItems OrderItem[]

  @@index([userId])
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId   Int
  sweet     Sweet    @relation(fields: [sweetId], references: [id], onDelete: Cascade)
  sweetId   Int
  quantity  Int
  price     Int

  @@index([orderId])
  @@index([sweetId])
}

model Restock {
  id          Int       @id @default(autoincrement())
  sweet       Sweet     @relation(fields: [sweetId], references: [id], onDelete: Cascade)
  sweetId     Int
  quantity    Int
  restockedAt DateTime  @default(now())

  @@index([sweetId])
}